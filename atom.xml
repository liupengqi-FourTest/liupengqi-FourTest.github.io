<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘鹏起的个人博客</title>
  
  <subtitle>为自己整理的学习文档</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-28T06:13:57.175Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>刘鹏起</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>体验Angular</title>
    <link href="http://example.com/2021/08/28/%E4%BD%93%E9%AA%8CAngular/"/>
    <id>http://example.com/2021/08/28/%E4%BD%93%E9%AA%8CAngular/</id>
    <published>2021-08-28T06:09:50.000Z</published>
    <updated>2021-08-28T06:13:57.175Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>目前，无论你使用什么前端框架，都必然要使用到各种 NodeJS 工具，Angular 也不例外。与其他框架不同，Angular 从一开始就走的 <code>全家桶</code> 式的设计思路，因此 @angular/cli 这款工具里面集成了日常开发需要使用的所有 Node 模块，使用 @angular/cli 可以大幅度降低搭建开发环境的难度</li></ul><blockquote><p>Angular CLI 类似于 Vue CLI，是 Angular 官方开发的一个脚手架工具，专门用来开发构建 Angular 应用程序</p></blockquote><h2 id="angular-cli-所包含功能"><a href="#angular-cli-所包含功能" class="headerlink" title="@angular/cli 所包含功能"></a>@angular/cli 所包含功能</h2><ul><li>Angular 应用程序初始化（webpack 打包、构建）</li><li>内置开发服务器</li><li>代码变更浏览器自动刷新</li><li>创建组件、指令、服务等集成工具</li><li>测试和维护</li><li>……….</li></ul><h2 id="安装-angular-cli-依赖环境"><a href="#安装-angular-cli-依赖环境" class="headerlink" title="安装 @angular/cli 依赖环境"></a>安装 @angular/cli 依赖环境</h2><ul><li><p>安装 Node.js</p><ul><li>下载地址：<code>https://nodejs.org/zh-cn/</code></li><li>安装</li><li>确认 Node.js 环境</li></ul></li><li><p>安装 npm</p><ul><li>npm 会随着 Node 的安装一起被安装</li><li>确认 npm 环境</li></ul></li><li><p>安装 python</p><ul><li>下载地址： <code>https://www.python.org/downloads/release/python-2714/</code></li></ul></li><li><p>安装 C++ 编译工具</p><ul><li><code>Angular CLi</code>  在 windos 上同时依赖 C++ 编译工具，所以我们这里也需要单独安装</li><li>当然如果你的机器安装了 <code>Visual Studio</code> （注意，不是 <code>Visual Studio Code</code>）</li><li>执行下面的命令安装 C++ 编译工具：</li></ul></li></ul><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> 如果没有安装 Visual Studio，就要执行下面的命令</span><br><span class="line">npm install <span class="params">--global</span> <span class="params">--production</span> windows-build-tools</span><br></pre></td></tr></table></figure><ul><li>安装 cnpm</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g cnpm --registry=https:<span class="regexp">//</span>registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="安装脚手架工具"><a href="#安装脚手架工具" class="headerlink" title="安装脚手架工具"></a>安装脚手架工具</h2><p><code>Angular CLI </code> 是 Angular 官方开发的一个类似于  <code>Vue CLI</code> 的脚手架开发工具，它帮我们集成了 <code>webpack</code> 打包、开发服务器、单元测试、自动编译、部署等功能特性。</p><ul><li>使用它的第一步就是先安装：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="selector-tag">i</span> -g <span class="keyword">@angular</span>/cli</span><br></pre></td></tr></table></figure><ul><li>安装结束之后我们可以通过在命令行输入以下命令测试是否安装成功：</li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h2 id="安装失败解决方案"><a href="#安装失败解决方案" class="headerlink" title="安装失败解决方案"></a>安装失败解决方案</h2><ul><li>在 Windos 平台上安装 @angular/cli 会报很多 error，那是因为 @angular/cli 在 Windows 平台上面依赖 Python 和 Visual Sudio 环境，而很多开发者的机器上并没有安装这些东西</li><li>以及 node-sass 模块被墙的问题，强烈推荐使用 <code>cnpm</code> 进行安装，可以非常有效地避免撞墙</li></ul><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i -g cnpm --registry=https://registry.<span class="built_in">npm</span>.taobao.org</span><br><span class="line"></span><br><span class="line">cnpm i -g @angular/cli</span><br></pre></td></tr></table></figure><ul><li>如果安装失败，请手动把全局的 <code>@angular/cli</code> 删掉： <code>cnpm uninstall -g @angular/cli</code></li><li>如果 <code>node_modules</code>  删不掉，爆出路径过长之类的错误，请尝试用一些文件粉碎机之类的工具强行删除</li><li>无论你用什么开发环境，安装的过程中请仔细看错误日志。很多人没有看错误日志的习惯，报错的时候直接懵逼了，根本不知道发生了什么</li></ul><h3 id="使用脚手架工具初始化项目"><a href="#使用脚手架工具初始化项目" class="headerlink" title="使用脚手架工具初始化项目"></a>使用脚手架工具初始化项目</h3><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng <span class="keyword">new</span> <span class="type">my</span>-app</span><br></pre></td></tr></table></figure><ul><li><code>Angular CLI</code> 将会自动帮你把目录结构创建好，并且会自动生成一些目录文件，就像这样：</li></ul><p><img src="/2021/08/28/%E4%BD%93%E9%AA%8CAngular/%E5%88%9B%E5%BB%BAangular%E9%A1%B9%E7%9B%AE.png" alt="创建angular项目"></p><ul><li><p>请特别注意：<code>angular CLI</code>  会自动生成项目骨架之后，会立即自动使用 <code>npm</code> 来安装所依赖的 <code>Node</code>   模块，所以这一道墙又会阻止我们通往自由的道路，所以这里如果初始化很慢或者失败，请自己手动 <code>Ctrl + c</code>  终止掉，然后进入初始化好的项目根目录使用 <code>cnpm</code>     来安装    </p><p><img src="/2021/08/28/%E4%BD%93%E9%AA%8CAngular/%E6%94%B9%E7%94%A8cnpm%E5%AE%89%E8%A3%85.png" alt="改用cnpm安装"></p></li></ul><h2 id="Server-the-application"><a href="#Server-the-application" class="headerlink" title="Server the application"></a>Server the application</h2><ul><li>使用脚手架工具初始化完成项目之后，我们就可以启动开发模式了：</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 或者 npm start</span></span><br><span class="line"><span class="attribute">ng</span> serve</span><br></pre></td></tr></table></figure><ul><li>注意：<ul><li>在项目根目录下执行</li><li>看好是 <code>serve</code>   不是 <code>server</code></li><li>该命令默认会开启一个服务占用 <code>4200</code> 端口，如果想要修可以通过 <code>--port</code> 参数来指定，例如：<code>ng serve --port 3000</code> </li></ul></li></ul><p><img src="/2021/08/28/%E4%BD%93%E9%AA%8CAngular/%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE.png" alt="启动项目"></p><ul><li>接下来我们打开浏览器，访问 <code> http://localhost:4200/</code>。成功即可在浏览器中看到如下页面：</li></ul><p><img src="/2021/08/28/%E4%BD%93%E9%AA%8CAngular/angular%E7%95%8C%E9%9D%A2.png" alt="angular界面"></p><h2 id="体验一下-Angular"><a href="#体验一下-Angular" class="headerlink" title="体验一下 Angular"></a>体验一下 <code>Angular</code></h2><ul><li>找到 <code>./src/app/app.component.ts</code> 文件，将 <code>AppComponent</code> 组件类中的 <code>title</code>  修改如下 （记得保存）：</li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppComponent &#123;</span><br><span class="line">title = <span class="string">&#x27;你的第一个 Angular 应用&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>你会发现浏览器随之刷新</li></ul><p><img src="/2021/08/28/%E4%BD%93%E9%AA%8CAngular/%E9%A1%B9%E7%9B%AE%E5%88%B7%E6%96%B0.png" alt="项目刷新"></p><h2 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h2><p>![ng启动过程](E:\xiamamu\web qianduan\26-Angular5\note\images\ng启动过程.png)</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── e2e 端到端测试（暂且不关心）</span><br><span class="line">├── node_modules npm安装的第三方包</span><br><span class="line">├── <span class="attribute">src</span> 存放业务源码</span><br><span class="line">├── <span class="selector-class">.angular-cli</span><span class="selector-class">.json</span> AngularCLI脚手架工具配置文件</span><br><span class="line">├── <span class="selector-class">.editorconfig</span> 针对编辑器的代码风格约束</span><br><span class="line">├── <span class="selector-class">.gitignore</span> Git仓库忽略配置项</span><br><span class="line">├── karma<span class="selector-class">.conf</span><span class="selector-class">.js</span> 测试配置文件（给karma用的，暂且不用关心）</span><br><span class="line">├── package<span class="selector-class">.json</span> 项目包说明文件</span><br><span class="line">├── protractor<span class="selector-class">.conf</span><span class="selector-class">.js</span> 端到端测试配置文件（暂且不用关心）</span><br><span class="line">├── README<span class="selector-class">.md</span> 项目说明文件</span><br><span class="line">├── tsconfig<span class="selector-class">.json</span> TypeScript配置文件</span><br><span class="line">└── tslint<span class="selector-class">.json</span> TypeScript代码风格校验工具配置文件（类似于 eslint）</span><br></pre></td></tr></table></figure><h2 id="npm-scripts-介绍"><a href="#npm-scripts-介绍" class="headerlink" title="npm scripts 介绍"></a><code>npm scripts</code> 介绍</h2><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;ng&quot;</span>: <span class="string">&quot;ng&quot;</span>, 运行查看 Angular CLI 脚手架工具使用帮助</span><br><span class="line">    <span class="string">&quot;start&quot;</span>: <span class="string">&quot;ng serve&quot;</span>, 运行开发模式</span><br><span class="line">    <span class="string">&quot;build&quot;</span>: <span class="string">&quot;ng build --prod&quot;</span>, 运行项目打包构建（用于发布到生成环境）</span><br><span class="line">    <span class="string">&quot;test&quot;</span>: <span class="string">&quot;ng test&quot;</span>, 运行karma单元测试</span><br><span class="line">    <span class="string">&quot;lint&quot;</span>: <span class="string">&quot;ng lint&quot;</span>, 运行TypeScript代码校验</span><br><span class="line">    <span class="string">&quot;e2e&quot;</span>: <span class="string">&quot;ng e2e&quot;</span> 运行protractor端到端测试</span><br><span class="line">  &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="angular-cli-json-文件"><a href="#angular-cli-json-文件" class="headerlink" title=".angular-cli.json 文件"></a><code>.angular-cli.json</code> 文件</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;$schema&quot;</span>: <span class="string">&quot;./node_modules/@angular/cli/lib/config/schema.json&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;project&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;my-app&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;apps&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;root&quot;</span>: <span class="string">&quot;src&quot;</span>, 源码根目录</span><br><span class="line">      <span class="attr">&quot;outDir&quot;</span>: <span class="string">&quot;dist&quot;</span>, 打包编译结果目录</span><br><span class="line">      <span class="attr">&quot;assets&quot;</span>: [ 存放静态资源目录</span><br><span class="line">        <span class="string">&quot;assets&quot;</span>,</span><br><span class="line">        <span class="string">&quot;favicon.ico&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;index&quot;</span>: <span class="string">&quot;index.html&quot;</span>, 单页面</span><br><span class="line">      <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;main.ts&quot;</span>, 模块启动入口</span><br><span class="line">      <span class="attr">&quot;polyfills&quot;</span>: <span class="string">&quot;polyfills.ts&quot;</span>, 用以兼容低版本浏览器不支持的 JavaScript 语法特性</span><br><span class="line">      <span class="attr">&quot;test&quot;</span>: <span class="string">&quot;test.ts&quot;</span>, 测试脚本</span><br><span class="line">      <span class="attr">&quot;tsconfig&quot;</span>: <span class="string">&quot;tsconfig.app.json&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;testTsconfig&quot;</span>: <span class="string">&quot;tsconfig.spec.json&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;prefix&quot;</span>: <span class="string">&quot;app&quot;</span>, 使用脚手架工具创建组件的自动命名前缀</span><br><span class="line">      <span class="attr">&quot;styles&quot;</span>: [ 全局样式文件</span><br><span class="line">        <span class="string">&quot;styles.css&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;scripts&quot;</span>: [], 全局脚本文件</span><br><span class="line">      <span class="attr">&quot;environmentSource&quot;</span>: <span class="string">&quot;environments/environment.ts&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;environments&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;dev&quot;</span>: <span class="string">&quot;environments/environment.ts&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;prod&quot;</span>: <span class="string">&quot;environments/environment.prod.ts&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;e2e&quot;</span>: &#123; 端到端测试相关配置</span><br><span class="line">    <span class="attr">&quot;protractor&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;config&quot;</span>: <span class="string">&quot;./protractor.conf.js&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;lint&quot;</span>: [ TypeScript代码风格校验相关配置</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;project&quot;</span>: <span class="string">&quot;src/tsconfig.app.json&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;exclude&quot;</span>: <span class="string">&quot;**/node_modules/**&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;project&quot;</span>: <span class="string">&quot;src/tsconfig.spec.json&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;exclude&quot;</span>: <span class="string">&quot;**/node_modules/**&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;project&quot;</span>: <span class="string">&quot;e2e/tsconfig.e2e.json&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;exclude&quot;</span>: <span class="string">&quot;**/node_modules/**&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;test&quot;</span>: &#123; karma单元测试相关配置</span><br><span class="line">    <span class="attr">&quot;karma&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;config&quot;</span>: <span class="string">&quot;./karma.conf.js&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;defaults&quot;</span>: &#123; 默认后缀名</span><br><span class="line">    <span class="attr">&quot;styleExt&quot;</span>: <span class="string">&quot;css&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;component&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="main-js"><a href="#main-js" class="headerlink" title="main.js"></a>main.js</h2><ul><li>描述：模块化启动入口</li><li>职责：加载启动根模块</li></ul><h2 id="AppModule"><a href="#AppModule" class="headerlink" title="AppModule"></a>AppModule</h2><ul><li>描述：项目根模块</li><li>职责：把组件、服务、路由、指令等组织到一起，设置启动组件为根组件</li></ul><h2 id="AppComponent"><a href="#AppComponent" class="headerlink" title="AppComponent"></a>AppComponent</h2><ul><li>描述：项目根组件</li><li>职责：替换掉 <code>index.html</code> 文件中的 <code>&lt;app-root&gt;&lt;/app-root&gt;</code> 节点</li></ul><h2 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h2><ul><li>资源</li><li>指令</li><li>路由</li><li>服务</li><li>……</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;目前，无论你使用什么前端框架，都必然要使用到各种 NodeJS 工具，Angular 也不例外。与其他框架不同，Angular </summary>
      
    
    
    
    <category term="Angular" scheme="http://example.com/categories/Angular/"/>
    
    
  </entry>
  
  <entry>
    <title>Angular简介</title>
    <link href="http://example.com/2021/08/21/Angular%E7%AE%80%E4%BB%8B/"/>
    <id>http://example.com/2021/08/21/Angular%E7%AE%80%E4%BB%8B/</id>
    <published>2021-08-21T06:35:23.000Z</published>
    <updated>2021-08-23T04:54:30.454Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Angular-是什么"><a href="#Angular-是什么" class="headerlink" title="Angular 是什么"></a>Angular 是什么</h2><ul><li><p><code>Angular</code>是一套用于构建用户界面的 <code>JavaScript</code> 框架。由 <code>Google</code> 开发和维护，主要被用来开发单页面应用程序。</p></li><li><p>类似于 Vue.js</p><ul><li>MVVM （数据驱动视图思想）</li><li>组件化</li><li>模块化</li><li>指令</li><li>……..</li></ul></li><li><p>由 Goole 开发和维护</p></li><li><p>开发单页面应用程序 （SPA）</p></li><li><p>特性</p><ul><li>MVVM</li><li>组件化</li><li>模块化</li><li>指令</li><li>服务</li><li>依赖注入</li><li>TypeScript</li><li>…</li></ul></li></ul><h2 id="发展历史"><a href="#发展历史" class="headerlink" title="发展历史"></a>发展历史</h2><ul><li><p>起源</p><ul><li><p>2009年，<code>Misko hevery</code> 和 <code>Adam abrons</code> 在业余时间打造了 <code>GetAngular</code></p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/MiskoInterview.png" alt="MiskoInterview"></p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/4529.jpg" alt="4529"></p></li></ul></li><li><p><code>Misko hevery</code> 接手了 <code>Google</code> 内部的一个项目 <code>Feedback</code> , 该项目经过 6 个月的迭代代码量已经达到了17000行。项目的开发和维护已经变得非常的困难。所以 <code>Misko</code>  就决定用 <code>GetAngular</code>  重写这个项目</p><ul><li><p>结果就是小伙子成功了，使用 <code>GetAngular</code> 之后该项目从 17000 行缩减到了 1500 行，前后仅仅使用了三周时间</p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/17000-1500.png" alt="17000-1500"></p></li><li><p><code>Misko</code> 领导一看，小伙子很厉害啊，同时也看到了 <code>GetAngular</code> 所带来的商业价值，所以决定把 <code>GetAngular</code> 正式立项，组织专职团队开发和维护</p></li><li><p><code>Abrons</code> 后来离开了这个计划，但在 <code>Google</code> 工作的 <code>Hevery</code> 和一些谷歌员工如 <code>lgor Minar</code>  和   <code>Vojta Jina</code> 等则继续开发维护此库</p></li><li><p>由于已不再是个人项目，所以开发团队将 <code>GetAngular</code> 重新命名为了 <code>Angular JS</code></p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/AngularJS-large.png" alt="AngularJS-large"></p></li></ul></li><li><p>至此，Angular JS 就进入了漫长的发展迭代阶段</p><ul><li>经过了三年的发展，Angular JS 在 2012 年 6 月份，<code>1.0.0</code> 版本正式推出</li><li>Angular JS 在 <code>1.2</code>之后的版本不再支持 IE 6 和 7</li><li>Angular JS 在 <code>1.3</code> 之后不再支持 IE 8</li><li>Angular JS 在 <code>1.5</code>增加了类似组件化的开发方式<ul><li>为过渡到 <code>Angular2</code> 做铺垫</li></ul></li><li><code>AngularJS 1.x.x</code>   当前已经发布到了 <code>1.6.x</code></li></ul></li><li><p>困境（Angular 1）</p><ul><li>饱受诟病的性能问题<ul><li>脏检查</li></ul></li><li>落后于当前 <code>Web</code> 发展理念<ul><li>例如组件化</li><li>模块化支持不友好</li></ul></li><li>对移动端支持不友好</li></ul></li><li><p>Angular 2横空出世</p><ul><li><p><code>Angular 1.x</code> 由于问题太多，历史包袱太重，重构几乎不可能</p></li><li><p>不过早在 2014年3月，官方博客就有提及开发新版本 <code>Angular</code>  的计划</p></li><li><p>2014年9月下旬一个大会上， <code>Angular2</code>  正式亮相</p></li><li><p>2016年9月15号，<code>Angular2</code> 正式发布。</p></li><li><p>由于 <code>ng2</code> 几乎完全重写了 <code>ng1</code> ，所以官方把 2 之后的版本都称之为 <code>Angular</code></p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/Angular-large.png" alt="Angular-large"></p><p>Angular 2 之后的正式 logo ：</p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/angular.png" alt="angular"></p></li></ul></li><li><p>新版本发布了，那用户如何从 1 升级到 2 呢？</p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/ng2-ng1.png" alt="ng2-ng1"></p></li><li><p>那到底要不要更新呢？</p><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/mountain.png" alt="mountain"></p><ul><li><p> ng2 相比 ng1</p></li><li><p> 移除了 <code>controller + $scope</code> 的设计方式，改用了当前主流的组件化构建</p></li><li><p> 相比 <code>ng1</code> 性能更好</p></li><li><p> 优先为移动端设计</p></li><li><p>更贴合未来标准</p><ul><li>EcmaScript 6</li><li>Web Component</li></ul></li><li><p> TypeScript</p></li><li><p> 反正就是更现代化，更好了。。。</p></li></ul></li><li><p>现状</p><ul><li>自 <code>Angular 2</code> 之后，官方承诺之后的版本都会兼容到 <code>Angular 2</code></li><li>当前 <code>Angular</code> 最新发布版为 <code>10.0.0</code></li><li>新版的 <code>Angular</code> 在 <code>Github</code> 上也已收货了 3万+ </li><li>使用量低于 <code>React</code> 和 <code>Vue</code></li></ul></li></ul><h2 id="那我们为什么要学习使用-Angular"><a href="#那我们为什么要学习使用-Angular" class="headerlink" title="那我们为什么要学习使用 Angular"></a>那我们为什么要学习使用 Angular</h2><ul><li>任何一种技术或者框架，一定要有自己的特色，如果跟别人的完全一样，解决的问题也和别人一样，那存在的意义和价值就会遭到质疑<ul><li>企业需求</li><li>增加职业竞争力</li><li>技术的本质思想都是一样的，也许你在其他技术中无法理解的事物，在这里你能找到想要的答案</li></ul></li></ul><blockquote><p>在这里我们明白技术只是工具，主要目的还是用来帮助我们解决业务问题，作为开发人员，我们对待技术的态度应该博学开放，多学习和了解不同技术。只有当你见的东西多了才能有自己的想法，才不会人云亦云，不至于迷失在技术更新迭代的浪潮之中！</p></blockquote><h2 id="学习-Angular-的一些建议"><a href="#学习-Angular-的一些建议" class="headerlink" title="学习 Angular 的一些建议"></a>学习 Angular 的一些建议</h2><p><img src="/2021/08/21/Angular%E7%AE%80%E4%BB%8B/on-my-god.png" alt="on-my-god"></p><ul><li>Angular 属于一上来就有拔高的感觉，而 Vue的学习就是渐进式，相对来说比较容易<ul><li>读官方文档</li><li>写 demo 测试</li><li>写小项目练手</li><li>参与实际项目开发经验</li><li>日积月累………..</li></ul></li></ul><blockquote><p>这是一个知识开放的时代，我们每个人都拥有一本 《九阴真经》，至于你如何利用它产生价值则需要一些方式。我们学习技术就像武侠练功一样，希望大家像郭靖一样拥有坚韧不拔的精神，锲而不舍的探索下去，终成一代大侠</p></blockquote><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><ul><li><a href="https://angularjs.org/">AngularJS 1.x.x 官网</a></li><li><a href="https://angular.io/">Angular 官网</a></li><li><a href="https://github.com/angular/angular">Angular Github</a></li><li><a href="https://angular.io/docs">Angular 官方文档</a></li><li><a href="https://angular.io/tutorial">Angular 官方教程</a></li><li><a href="https://angular.io/api">Angular APi文档</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Angular-是什么&quot;&gt;&lt;a href=&quot;#Angular-是什么&quot; class=&quot;headerlink&quot; title=&quot;Angular 是什么&quot;&gt;&lt;/a&gt;Angular 是什么&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Angular&lt;/code&gt;是一套用于</summary>
      
    
    
    
    <category term="Angular" scheme="http://example.com/categories/Angular/"/>
    
    
  </entry>
  
  <entry>
    <title>Git入门指南</title>
    <link href="http://example.com/2021/08/21/Git%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://example.com/2021/08/21/Git%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</id>
    <published>2021-08-21T00:52:03.000Z</published>
    <updated>2021-08-21T01:37:06.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Git 入门到放弃</p><p>Git！</p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init </span><br><span class="line"></span><br><span class="line">git <span class="built_in">log</span></span><br><span class="line"></span><br><span class="line">git add</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Git 入门到放弃&lt;/p&gt;
&lt;p&gt;Git！&lt;/p&gt;
&lt;h2 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/08/20/hello-world/"/>
    <id>http://example.com/2021/08/20/hello-world/</id>
    <published>2021-08-20T06:03:39.868Z</published>
    <updated>2021-08-23T04:59:48.862Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="博客" scheme="http://example.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
